"use strict";
(self["webpackChunkreact"] = self["webpackChunkreact"] || []).push([["src_project_components_dashboard_types_js-node_modules_react-d3-treemap_dist_react_d3_treemap_css"],{

/***/ "./src/project/components/charts/tree_map.js":
/*!***************************************************!*\
  !*** ./src/project/components/charts/tree_map.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react_d3_treemap__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-d3-treemap */ "./node_modules/react-d3-treemap/dist/react.d3.treemap.js");
/* harmony import */ var react_d3_treemap__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_d3_treemap__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react_d3_treemap_dist_react_d3_treemap_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-d3-treemap/dist/react.d3.treemap.css */ "./node_modules/react-d3-treemap/dist/react.d3.treemap.css");
/* harmony import */ var js_convert_case__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! js-convert-case */ "./node_modules/js-convert-case/index.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }







var TreeMap = /*#__PURE__*/function (_React$Component) {
  _inherits(TreeMap, _React$Component);

  var _super = _createSuper(TreeMap);

  function TreeMap(props) {
    var _this;

    _classCallCheck(this, TreeMap);

    _this = _super.call(this, props);
    _this.state = {
      width: 100,
      data: {},
      dataRef: null
    };
    _this.ref = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createRef();
    return _this;
  }

  _createClass(TreeMap, [{
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      var width = this.ref.current ? this.ref.current.offsetWidth : this.state.width;

      if (width !== this.state.width) {
        this.setState({
          width: width
        });
      }

      var data = this.props.data;

      if (JSON.stringify(this.props.data) !== JSON.stringify(this.state.dataRef)) {
        this.setState({
          data: this.parseMapToData(this.props.title, data),
          dataRef: data
        });
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          loading = _this$props.loading,
          error = _this$props.error,
          title = _this$props.title;
      var _this$state = this.state,
          data = _this$state.data,
          width = _this$state.width;
      if (loading || !data.children) return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("p", null, "Loading...");
      if (error) return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("p", null, "Error ", error.toString());
      if (!data) return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("p", null, "no data");
      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {
        id: "___",
        ref: this.ref
      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement((react_d3_treemap__WEBPACK_IMPORTED_MODULE_2___default()), {
        id: "myTreeMap",
        width: width,
        height: (width * 0.5).toFixed(0),
        data: data,
        levelsToDisplay: 1,
        nodeStyle: {
          paddingLeft: 5,
          paddingRight: 5
        }
      }));
    }
  }, {
    key: "parseMapToData",
    value: function parseMapToData(title, data) {
      if (!data) return null;
      var resp = [];
      var ranges = [10, 25, 100];
      var others = {};
      Object.keys(data).forEach(function (c) {
        var value = data[c];
        var obj = {
          name: c.startsWith("_") ? c.substring(1) : js_convert_case__WEBPACK_IMPORTED_MODULE_4__["default"].toHeaderCase(c),
          value: value
        };

        for (var i = 0; i < ranges.length; i++) {
          var range = ranges[i];
          if (value > range) continue;
          if (!others[range]) others[range] = {
            name: "".concat(i === 0 ? 1 : ranges[i - 1] + 1, "-").concat(range),
            value: 0,
            children: []
          };
          others[range].children.push(obj);
          return;
        }

        resp.push(obj);
      });
      Object.keys(others).forEach(function (k) {
        resp.push(others[k]);
      });
      return {
        name: title,
        children: resp
      };
    }
  }]);

  return TreeMap;
}(react__WEBPACK_IMPORTED_MODULE_0__.Component);

TreeMap.propTypes = {
  data: (prop_types__WEBPACK_IMPORTED_MODULE_1___default().object),
  title: (prop_types__WEBPACK_IMPORTED_MODULE_1___default().string)
};
TreeMap.defaultProps = {
  data: {},
  title: "title"
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (TreeMap);

/***/ }),

/***/ "./src/project/components/dashboard/types.js":
/*!***************************************************!*\
  !*** ./src/project/components/dashboard/types.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Countries)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var components_charts_tree_map__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! components/charts/tree_map */ "./src/project/components/charts/tree_map.js");



var title = "by Type";
function Countries(params) {
  var loading = params.loading,
      error = params.error,
      data = params.data,
      format = params.format;
  if (loading) return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("p", null, "Loading...");
  if (error) return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("p", null, "Error ", error.toString());
  if (!data || data.length === 0) return "NO DATA";
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", null, format === "text" && renderText(data), format === "graph" && renderGraph(title, data));
}

function renderText(data) {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("p", null, " Movies by country"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("ul", null, Object.keys(data).map(function (country, idxc) {
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("li", {
      key: idxc
    }, " ", country, " : ", data[country], " ");
  }))));
}

function renderGraph(title, data) {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(components_charts_tree_map__WEBPACK_IMPORTED_MODULE_2__["default"], {
    title: title,
    data: data
  });
}

Countries.propTypes = {
  data: (prop_types__WEBPACK_IMPORTED_MODULE_1___default().object),
  format: prop_types__WEBPACK_IMPORTED_MODULE_1___default().oneOf(['text', 'graph'])
};
Countries.defaultProps = {
  data: {},
  format: "text"
};

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,