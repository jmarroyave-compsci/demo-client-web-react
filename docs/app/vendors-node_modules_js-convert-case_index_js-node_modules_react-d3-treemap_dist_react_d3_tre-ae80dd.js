(self["webpackChunkreact"] = self["webpackChunkreact"] || []).push([["vendors-node_modules_js-convert-case_index_js-node_modules_react-d3-treemap_dist_react_d3_tre-ae80dd"],{

/***/ "./node_modules/js-convert-case/index.js":
/*!***********************************************!*\
  !*** ./node_modules/js-convert-case/index.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(/*! ./lib */ "./node_modules/js-convert-case/lib/index.js");


/***/ }),

/***/ "./node_modules/js-convert-case/lib/index.js":
/*!***************************************************!*\
  !*** ./node_modules/js-convert-case/lib/index.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/**
 * Author: <Ha Huynh> https://github.com/huynhsamha
 * Github: https://github.com/huynhsamha/js-convert-case
 * NPM Package: https://www.npmjs.com/package/js-convert-case
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.pascalKeys = exports.snakeKeys = exports.camelKeys = exports.upperKeys = exports.lowerKeys = exports.toLowerCase = exports.toUpperCase = exports.toHeaderCase = exports.toSentenceCase = exports.toTextCase = exports.toPathCase = exports.toDotCase = exports.toPascalCase = exports.toSnakeCase = exports.toCamelCase = void 0;
var js_camelcase_1 = __webpack_require__(/*! ./modules/js-camelcase */ "./node_modules/js-convert-case/lib/modules/js-camelcase/index.js");
exports.toCamelCase = js_camelcase_1.default;
var js_snakecase_1 = __webpack_require__(/*! ./modules/js-snakecase */ "./node_modules/js-convert-case/lib/modules/js-snakecase/index.js");
exports.toSnakeCase = js_snakecase_1.default;
var js_pascalcase_1 = __webpack_require__(/*! ./modules/js-pascalcase */ "./node_modules/js-convert-case/lib/modules/js-pascalcase/index.js");
exports.toPascalCase = js_pascalcase_1.default;
var js_dotcase_1 = __webpack_require__(/*! ./modules/js-dotcase */ "./node_modules/js-convert-case/lib/modules/js-dotcase/index.js");
exports.toDotCase = js_dotcase_1.default;
var js_pathcase_1 = __webpack_require__(/*! ./modules/js-pathcase */ "./node_modules/js-convert-case/lib/modules/js-pathcase/index.js");
exports.toPathCase = js_pathcase_1.default;
var js_textcase_1 = __webpack_require__(/*! ./modules/js-textcase */ "./node_modules/js-convert-case/lib/modules/js-textcase/index.js");
exports.toTextCase = js_textcase_1.default;
var js_sentencecase_1 = __webpack_require__(/*! ./modules/js-sentencecase */ "./node_modules/js-convert-case/lib/modules/js-sentencecase/index.js");
exports.toSentenceCase = js_sentencecase_1.default;
var js_headercase_1 = __webpack_require__(/*! ./modules/js-headercase */ "./node_modules/js-convert-case/lib/modules/js-headercase/index.js");
exports.toHeaderCase = js_headercase_1.default;
var lowercase_keys_object_1 = __webpack_require__(/*! ./modules/extends/lowercase-keys-object */ "./node_modules/js-convert-case/lib/modules/extends/lowercase-keys-object/index.js");
exports.lowerKeys = lowercase_keys_object_1.default;
var uppercase_keys_object_1 = __webpack_require__(/*! ./modules/extends/uppercase-keys-object */ "./node_modules/js-convert-case/lib/modules/extends/uppercase-keys-object/index.js");
exports.upperKeys = uppercase_keys_object_1.default;
var camelcase_keys_object_1 = __webpack_require__(/*! ./modules/extends/camelcase-keys-object */ "./node_modules/js-convert-case/lib/modules/extends/camelcase-keys-object/index.js");
exports.camelKeys = camelcase_keys_object_1.default;
var snakecase_keys_object_1 = __webpack_require__(/*! ./modules/extends/snakecase-keys-object */ "./node_modules/js-convert-case/lib/modules/extends/snakecase-keys-object/index.js");
exports.snakeKeys = snakecase_keys_object_1.default;
var pascalcase_keys_object_1 = __webpack_require__(/*! ./modules/extends/pascalcase-keys-object */ "./node_modules/js-convert-case/lib/modules/extends/pascalcase-keys-object/index.js");
exports.pascalKeys = pascalcase_keys_object_1.default;
var toLowerCase = function (str) { return String(str || '').toLowerCase(); };
exports.toLowerCase = toLowerCase;
var toUpperCase = function (str) { return String(str || '').toUpperCase(); };
exports.toUpperCase = toUpperCase;
var jsConvert = {
    toCamelCase: js_camelcase_1.default,
    toSnakeCase: js_snakecase_1.default,
    toPascalCase: js_pascalcase_1.default,
    toDotCase: js_dotcase_1.default,
    toPathCase: js_pathcase_1.default,
    toTextCase: js_textcase_1.default,
    toSentenceCase: js_sentencecase_1.default,
    toHeaderCase: js_headercase_1.default,
    toUpperCase: toUpperCase,
    toLowerCase: toLowerCase,
    lowerKeys: lowercase_keys_object_1.default,
    upperKeys: uppercase_keys_object_1.default,
    camelKeys: camelcase_keys_object_1.default,
    snakeKeys: snakecase_keys_object_1.default,
    pascalKeys: pascalcase_keys_object_1.default
};
exports["default"] = jsConvert;


/***/ }),

/***/ "./node_modules/js-convert-case/lib/modules/extends/camelcase-keys-object/index.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/js-convert-case/lib/modules/extends/camelcase-keys-object/index.js ***!
  \*****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var utils_1 = __webpack_require__(/*! ../utils */ "./node_modules/js-convert-case/lib/modules/extends/utils.js");
var js_camelcase_1 = __webpack_require__(/*! ../../js-camelcase */ "./node_modules/js-convert-case/lib/modules/js-camelcase/index.js");
/**
 * Convert string keys in an object to camelCase format.
 * @param obj: object to convert keys. If `obj` isn't a json object, `null` is returned.
 * @param opt: (optional) Options parameter, default is non-recursive.
 */
function camelKeys(obj, opt) {
    if (opt === void 0) { opt = utils_1.DefaultOption; }
    if (!utils_1.isValidObject(obj))
        return null;
    opt = utils_1.validateOptions(opt);
    var res = {};
    Object.keys(obj).forEach(function (key) {
        var value = obj[key];
        var nkey = js_camelcase_1.default(key);
        if (opt.recursive) {
            if (utils_1.isValidObject(value)) {
                if (!utils_1.belongToTypes(value, opt.keepTypesOnRecursion)) {
                    value = camelKeys(value, opt);
                }
            }
            else if (opt.recursiveInArray && utils_1.isArrayObject(value)) {
                value = __spreadArrays(value).map(function (v) {
                    var ret = v;
                    if (utils_1.isValidObject(v)) {
                        // object in array
                        if (!utils_1.belongToTypes(ret, opt.keepTypesOnRecursion)) {
                            ret = camelKeys(v, opt);
                        }
                    }
                    else if (utils_1.isArrayObject(v)) {
                        // array in array
                        // workaround by using an object holding array value
                        var temp = camelKeys({ key: v }, opt);
                        ret = temp.key;
                    }
                    return ret;
                });
            }
        }
        res[nkey] = value;
    });
    return res;
}
exports["default"] = camelKeys;


/***/ }),

/***/ "./node_modules/js-convert-case/lib/modules/extends/lowercase-keys-object/index.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/js-convert-case/lib/modules/extends/lowercase-keys-object/index.js ***!
  \*****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var utils_1 = __webpack_require__(/*! ../utils */ "./node_modules/js-convert-case/lib/modules/extends/utils.js");
/**
 * Convert string keys in an object to lowercase format.
 * @param obj: object to convert keys. If `obj` isn't a json object, `null` is returned.
 * @param opt: (optional) Options parameter, default is non-recursive.
 */
function lowerKeys(obj, opt) {
    if (opt === void 0) { opt = utils_1.DefaultOption; }
    if (!utils_1.isValidObject(obj))
        return null;
    opt = utils_1.validateOptions(opt);
    var res = {};
    Object.keys(obj).forEach(function (key) {
        var value = obj[key];
        var nkey = key.toLowerCase();
        if (opt.recursive) {
            if (utils_1.isValidObject(value)) {
                if (!utils_1.belongToTypes(value, opt.keepTypesOnRecursion)) {
                    value = lowerKeys(value, opt);
                }
            }
            else if (opt.recursiveInArray && utils_1.isArrayObject(value)) {
                value = __spreadArrays(value).map(function (v) {
                    var ret = v;
                    if (utils_1.isValidObject(v)) {
                        // object in array
                        if (!utils_1.belongToTypes(ret, opt.keepTypesOnRecursion)) {
                            ret = lowerKeys(v, opt);
                        }
                    }
                    else if (utils_1.isArrayObject(v)) {
                        // array in array
                        // workaround by using an object holding array value
                        var temp = lowerKeys({ key: v }, opt);
                        ret = temp.key;
                    }
                    return ret;
                });
            }
        }
        res[nkey] = value;
    });
    return res;
}
exports["default"] = lowerKeys;


/***/ }),

/***/ "./node_modules/js-convert-case/lib/modules/extends/pascalcase-keys-object/index.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/js-convert-case/lib/modules/extends/pascalcase-keys-object/index.js ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var utils_1 = __webpack_require__(/*! ../utils */ "./node_modules/js-convert-case/lib/modules/extends/utils.js");
var js_pascalcase_1 = __webpack_require__(/*! ../../js-pascalcase */ "./node_modules/js-convert-case/lib/modules/js-pascalcase/index.js");
/**
 * Convert string keys in an object to PascalCase format.
 * @param obj: object to convert keys. If `obj` isn't a json object, `null` is returned.
 * @param opt: (optional) Options parameter, default is non-recursive.
 */
function pascalKeys(obj, opt) {
    if (opt === void 0) { opt = utils_1.DefaultOption; }
    if (!utils_1.isValidObject(obj))
        return null;
    opt = utils_1.validateOptions(opt);
    var res = {};
    Object.keys(obj).forEach(function (key) {
        var value = obj[key];
        var nkey = js_pascalcase_1.default(key);
        if (opt.recursive) {
            if (utils_1.isValidObject(value)) {
                if (!utils_1.belongToTypes(value, opt.keepTypesOnRecursion)) {
                    value = pascalKeys(value, opt);
                }
            }
            else if (opt.recursiveInArray && utils_1.isArrayObject(value)) {
                value = __spreadArrays(value).map(function (v) {
                    var ret = v;
                    if (utils_1.isValidObject(v)) {
                        // object in array
                        if (!utils_1.belongToTypes(ret, opt.keepTypesOnRecursion)) {
                            ret = pascalKeys(v, opt);
                        }
                    }
                    else if (utils_1.isArrayObject(v)) {
                        // array in array
                        // workaround by using an object holding array value
                        var temp = pascalKeys({ key: v }, opt);
                        ret = temp.key;
                    }
                    return ret;
                });
            }
        }
        res[nkey] = value;
    });
    return res;
}
exports["default"] = pascalKeys;


/***/ }),

/***/ "./node_modules/js-convert-case/lib/modules/extends/snakecase-keys-object/index.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/js-convert-case/lib/modules/extends/snakecase-keys-object/index.js ***!
  \*****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var utils_1 = __webpack_require__(/*! ../utils */ "./node_modules/js-convert-case/lib/modules/extends/utils.js");
var js_snakecase_1 = __webpack_require__(/*! ../../js-snakecase */ "./node_modules/js-convert-case/lib/modules/js-snakecase/index.js");
/**
 * Convert string keys in an object to snake_case format.
 * @param obj: object to convert keys. If `obj` isn't a json object, `null` is returned.
 * @param opt: (optional) Options parameter, default is non-recursive.
 */
function snakeKeys(obj, opt) {
    if (opt === void 0) { opt = utils_1.DefaultOption; }
    if (!utils_1.isValidObject(obj))
        return null;
    opt = utils_1.validateOptions(opt);
    var res = {};
    Object.keys(obj).forEach(function (key) {
        var value = obj[key];
        var nkey = js_snakecase_1.default(key);
        if (opt.recursive) {
            if (utils_1.isValidObject(value)) {
                if (!utils_1.belongToTypes(value, opt.keepTypesOnRecursion)) {
                    value = snakeKeys(value, opt);
                }
            }
            else if (opt.recursiveInArray && utils_1.isArrayObject(value)) {
                value = __spreadArrays(value).map(function (v) {
                    var ret = v;
                    if (utils_1.isValidObject(v)) {
                        // object in array
                        if (!utils_1.belongToTypes(ret, opt.keepTypesOnRecursion)) {
                            ret = snakeKeys(v, opt);
                        }
                    }
                    else if (utils_1.isArrayObject(v)) {
                        // array in array
                        // workaround by using an object holding array value
                        var temp = snakeKeys({ key: v }, opt);
                        ret = temp.key;
                    }
                    return ret;
                });
            }
        }
        res[nkey] = value;
    });
    return res;
}
exports["default"] = snakeKeys;


/***/ }),

/***/ "./node_modules/js-convert-case/lib/modules/extends/uppercase-keys-object/index.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/js-convert-case/lib/modules/extends/uppercase-keys-object/index.js ***!
  \*****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var utils_1 = __webpack_require__(/*! ../utils */ "./node_modules/js-convert-case/lib/modules/extends/utils.js");
/**
 * Convert string keys in an object to UPPERCASE format.
 * @param obj: object to convert keys. If `obj` isn't a json object, `null` is returned.
 * @param opt: (optional) Options parameter, default is non-recursive.
 */
function upperKeys(obj, opt) {
    if (opt === void 0) { opt = utils_1.DefaultOption; }
    if (!utils_1.isValidObject(obj))
        return null;
    opt = utils_1.validateOptions(opt);
    var res = {};
    Object.keys(obj).forEach(function (key) {
        var value = obj[key];
        var nkey = key.toUpperCase();
        if (opt.recursive) {
            if (utils_1.isValidObject(value)) {
                if (!utils_1.belongToTypes(value, opt.keepTypesOnRecursion)) {
                    value = upperKeys(value, opt);
                }
            }
            else if (opt.recursiveInArray && utils_1.isArrayObject(value)) {
                value = __spreadArrays(value).map(function (v) {
                    var ret = v;
                    if (utils_1.isValidObject(v)) {
                        // object in array
                        if (!utils_1.belongToTypes(ret, opt.keepTypesOnRecursion)) {
                            ret = upperKeys(v, opt);
                        }
                    }
                    else if (utils_1.isArrayObject(v)) {
                        // array in array
                        // workaround by using an object holding array value
                        var temp = upperKeys({ key: v }, opt);
                        ret = temp.key;
                    }
                    return ret;
                });
            }
        }
        res[nkey] = value;
    });
    return res;
}
exports["default"] = upperKeys;


/***/ }),

/***/ "./node_modules/js-convert-case/lib/modules/extends/utils.js":
/*!*******************************************************************!*\
  !*** ./node_modules/js-convert-case/lib/modules/extends/utils.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.belongToTypes = exports.isValidObject = exports.isArrayObject = exports.validateOptions = exports.DefaultOption = void 0;
/**
 * Default options for convert function. This option is not recursive.
 */
exports.DefaultOption = {
    recursive: false,
    recursiveInArray: false,
    keepTypesOnRecursion: []
};
exports.validateOptions = function (opt) {
    if (opt === void 0) { opt = exports.DefaultOption; }
    if (opt.recursive == null) {
        opt = exports.DefaultOption;
    }
    else if (opt.recursiveInArray == null) {
        opt.recursiveInArray = false;
    }
    return opt;
};
exports.isArrayObject = function (obj) { return obj != null && Array.isArray(obj); };
exports.isValidObject = function (obj) { return obj != null && typeof obj === 'object' && !Array.isArray(obj); };
exports.belongToTypes = function (obj, types) { return (types || []).some(function (Type) { return obj instanceof Type; }); };


/***/ }),

/***/ "./node_modules/js-convert-case/lib/modules/js-camelcase/index.js":
/*!************************************************************************!*\
  !*** ./node_modules/js-convert-case/lib/modules/js-camelcase/index.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
function toCamelCase(str) {
    if (str === void 0) { str = ''; }
    if (!str)
        return '';
    return String(str)
        .replace(/^[^A-Za-z0-9]*|[^A-Za-z0-9]*$/g, '')
        .replace(/[^A-Za-z0-9]+/g, '$')
        .replace(/([a-z])([A-Z])/g, function (m, a, b) { return a + "$" + b; })
        .toLowerCase()
        .replace(/(\$)(\w)/g, function (m, a, b) { return b.toUpperCase(); });
}
exports["default"] = toCamelCase;


/***/ }),

/***/ "./node_modules/js-convert-case/lib/modules/js-dotcase/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/js-convert-case/lib/modules/js-dotcase/index.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
function toDotCase(str) {
    if (str === void 0) { str = ''; }
    if (!str)
        return '';
    return String(str)
        .replace(/^[^A-Za-z0-9]*|[^A-Za-z0-9]*$/g, '')
        .replace(/([a-z])([A-Z])/g, function (m, a, b) { return a + "_" + b.toLowerCase(); })
        .replace(/[^A-Za-z0-9]+|_+/g, '.')
        .toLowerCase();
}
exports["default"] = toDotCase;


/***/ }),

/***/ "./node_modules/js-convert-case/lib/modules/js-headercase/index.js":
/*!*************************************************************************!*\
  !*** ./node_modules/js-convert-case/lib/modules/js-headercase/index.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
function toHeaderCase(str) {
    if (str === void 0) { str = ''; }
    if (!str)
        return '';
    return String(str)
        .replace(/^[^A-Za-z0-9]*|[^A-Za-z0-9]*$/g, '')
        .replace(/([a-z])([A-Z])/g, function (m, a, b) { return a + "_" + b.toLowerCase(); })
        .replace(/[^A-Za-z0-9]+|_+/g, ' ')
        .toLowerCase()
        .replace(/( ?)(\w+)( ?)/g, function (m, a, b, c) { return a + b.charAt(0).toUpperCase() + b.slice(1) + c; });
}
exports["default"] = toHeaderCase;


/***/ }),

/***/ "./node_modules/js-convert-case/lib/modules/js-pascalcase/index.js":
/*!*************************************************************************!*\
  !*** ./node_modules/js-convert-case/lib/modules/js-pascalcase/index.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
function toPascalCase(str) {
    if (str === void 0) { str = ''; }
    if (!str)
        return '';
    return String(str)
        .replace(/^[^A-Za-z0-9]*|[^A-Za-z0-9]*$/g, '$')
        .replace(/[^A-Za-z0-9]+/g, '$')
        .replace(/([a-z])([A-Z])/g, function (m, a, b) { return a + "$" + b; })
        .toLowerCase()
        .replace(/(\$)(\w?)/g, function (m, a, b) { return b.toUpperCase(); });
}
exports["default"] = toPascalCase;


/***/ }),

/***/ "./node_modules/js-convert-case/lib/modules/js-pathcase/index.js":
/*!***********************************************************************!*\
  !*** ./node_modules/js-convert-case/lib/modules/js-pathcase/index.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
function toPathCase(str) {
    if (str === void 0) { str = ''; }
    if (!str)
        return '';
    return String(str)
        .replace(/^[^A-Za-z0-9]*|[^A-Za-z0-9]*$/g, '')
        .replace(/([a-z])([A-Z])/g, function (m, a, b) { return a + "_" + b.toLowerCase(); })
        .replace(/[^A-Za-z0-9]+|_+/g, '/')
        .toLowerCase();
}
exports["default"] = toPathCase;


/***/ }),

/***/ "./node_modules/js-convert-case/lib/modules/js-sentencecase/index.js":
/*!***************************************************************************!*\
  !*** ./node_modules/js-convert-case/lib/modules/js-sentencecase/index.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
function toSentenceCase(str) {
    if (str === void 0) { str = ''; }
    if (!str)
        return '';
    var textcase = String(str)
        .replace(/^[^A-Za-z0-9]*|[^A-Za-z0-9]*$/g, '')
        .replace(/([a-z])([A-Z])/g, function (m, a, b) { return a + "_" + b.toLowerCase(); })
        .replace(/[^A-Za-z0-9]+|_+/g, ' ')
        .toLowerCase();
    return textcase.charAt(0).toUpperCase() + textcase.slice(1);
}
exports["default"] = toSentenceCase;


/***/ }),

/***/ "./node_modules/js-convert-case/lib/modules/js-snakecase/index.js":
/*!************************************************************************!*\
  !*** ./node_modules/js-convert-case/lib/modules/js-snakecase/index.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
function toSnakeCase(str) {
    if (str === void 0) { str = ''; }
    if (!str)
        return '';
    return String(str)
        .replace(/^[^A-Za-z0-9]*|[^A-Za-z0-9]*$/g, '')
        .replace(/([a-z])([A-Z])/g, function (m, a, b) { return a + '_' + b.toLowerCase(); })
        .replace(/[^A-Za-z0-9]+|_+/g, '_')
        .toLowerCase();
}
exports["default"] = toSnakeCase;


/***/ }),

/***/ "./node_modules/js-convert-case/lib/modules/js-textcase/index.js":
/*!***********************************************************************!*\
  !*** ./node_modules/js-convert-case/lib/modules/js-textcase/index.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
function toTextCase(str) {
    if (str === void 0) { str = ''; }
    if (!str)
        return '';
    return String(str)
        .replace(/^[^A-Za-z0-9]*|[^A-Za-z0-9]*$/g, '')
        .replace(/([a-z])([A-Z])/g, function (m, a, b) { return a + '_' + b.toLowerCase(); })
        .replace(/[^A-Za-z0-9]+|_+/g, ' ')
        .toLowerCase();
}
exports["default"] = toTextCase;


/***/ }),

/***/ "./node_modules/react-d3-treemap/dist/react.d3.treemap.css":
/*!*****************************************************************!*\
  !*** ./node_modules/react-d3-treemap/dist/react.d3.treemap.css ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ "./node_modules/react-d3-treemap/dist/react.d3.treemap.js":
/*!****************************************************************!*\
  !*** ./node_modules/react-d3-treemap/dist/react.d3.treemap.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/*! For license information please see react.d3.treemap.js.LICENSE.txt */
!function(t,e){ true?module.exports=e(__webpack_require__(/*! react */ "./node_modules/react/index.js")):0}(self,(function(t){return(()=>{var e={184:(t,e)=>{var n;!function(){"use strict";var r={}.hasOwnProperty;function o(){for(var t=[],e=0;e<arguments.length;e++){var n=arguments[e];if(n){var i=typeof n;if("string"===i||"number"===i)t.push(n);else if(Array.isArray(n)&&n.length){var a=o.apply(null,n);a&&t.push(a)}else if("object"===i)for(var l in n)r.call(n,l)&&n[l]&&t.push(l)}}return t.join(" ")}t.exports?(o.default=o,t.exports=o):void 0===(n=function(){return o}.apply(e,[]))||(t.exports=n)}()},383:e=>{"use strict";e.exports=t}},n={};function r(t){var o=n[t];if(void 0!==o)return o.exports;var i=n[t]={exports:{}};return e[t](i,i.exports,r),i.exports}r.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return r.d(e,{a:e}),e},r.d=(t,e)=>{for(var n in e)r.o(e,n)&&!r.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})};var o={};return(()=>{"use strict";r.r(o),r.d(o,{ColorModel:()=>ve,NumberOfChildrenPlacement:()=>ue,default:()=>Ze});var t=r(383),e=r(184),n=r.n(e),i=Math.sqrt(50),a=Math.sqrt(10),l=Math.sqrt(2);function u(t,e,n){var r=(e-t)/Math.max(0,n),o=Math.floor(Math.log(r)/Math.LN10),u=r/Math.pow(10,o);return o>=0?(u>=i?10:u>=a?5:u>=l?2:1)*Math.pow(10,o):-Math.pow(10,-o)/(u>=i?10:u>=a?5:u>=l?2:1)}function c(t,e){return t<e?-1:t>e?1:t>=e?0:NaN}function s(t){let e=t,n=t;function r(t,e,r,o){for(null==r&&(r=0),null==o&&(o=t.length);r<o;){const i=r+o>>>1;n(t[i],e)<0?r=i+1:o=i}return r}return 1===t.length&&(e=(e,n)=>t(e)-n,n=function(t){return(e,n)=>c(t(e),n)}(t)),{left:r,center:function(t,n,o,i){null==o&&(o=0),null==i&&(i=t.length);const a=r(t,n,o,i-1);return a>o&&e(t[a-1],n)>-e(t[a],n)?a-1:a},right:function(t,e,r,o){for(null==r&&(r=0),null==o&&(o=t.length);r<o;){const i=r+o>>>1;n(t[i],e)>0?o=i:r=i+1}return r}}}const h=s(c),f=h.right,d=(h.left,s((function(t){return null===t?NaN:+t})).center,f);function p(t,e,n){t.prototype=e.prototype=n,n.constructor=t}function g(t,e){var n=Object.create(t.prototype);for(var r in e)n[r]=e[r];return n}function m(){}var v=.7,y=1/v,b="\\s*([+-]?\\d+)\\s*",w="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",x="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",N=/^#([0-9a-f]{3,8})$/,M=new RegExp("^rgb\\("+[b,b,b]+"\\)$"),k=new RegExp("^rgb\\("+[x,x,x]+"\\)$"),C=new RegExp("^rgba\\("+[b,b,b,w]+"\\)$"),E=new RegExp("^rgba\\("+[x,x,x,w]+"\\)$"),S=new RegExp("^hsl\\("+[w,x,x]+"\\)$"),T=new RegExp("^hsla\\("+[w,x,x,w]+"\\)$"),O={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};function I(){return this.rgb().formatHex()}function P(){return this.rgb().formatRgb()}function A(t){var e,n;return t=(t+"").trim().toLowerCase(),(e=N.exec(t))?(n=e[1].length,e=parseInt(e[1],16),6===n?R(e):3===n?new D(e>>8&15|e>>4&240,e>>4&15|240&e,(15&e)<<4|15&e,1):8===n?_(e>>24&255,e>>16&255,e>>8&255,(255&e)/255):4===n?_(e>>12&15|e>>8&240,e>>8&15|e>>4&240,e>>4&15|240&e,((15&e)<<4|15&e)/255):null):(e=M.exec(t))?new D(e[1],e[2],e[3],1):(e=k.exec(t))?new D(255*e[1]/100,255*e[2]/100,255*e[3]/100,1):(e=C.exec(t))?_(e[1],e[2],e[3],e[4]):(e=E.exec(t))?_(255*e[1]/100,255*e[2]/100,255*e[3]/100,e[4]):(e=S.exec(t))?q(e[1],e[2]/100,e[3]/100,1):(e=T.exec(t))?q(e[1],e[2]/100,e[3]/100,e[4]):O.hasOwnProperty(t)?R(O[t]):"transparent"===t?new D(NaN,NaN,NaN,0):null}function R(t){return new D(t>>16&255,t>>8&255,255&t,1)}function _(t,e,n,r){return r<=0&&(t=e=n=NaN),new D(t,e,n,r)}function z(t){return t instanceof m||(t=A(t)),t?new D((t=t.rgb()).r,t.g,t.b,t.opacity):new D}function F(t,e,n,r){return 1===arguments.length?z(t):new D(t,e,n,null==r?1:r)}function D(t,e,n,r){this.r=+t,this.g=+e,this.b=+n,this.opacity=+r}function j(){return"#"+L(this.r)+L(this.g)+L(this.b)}function B(){var t=this.opacity;return(1===(t=isNaN(t)?1:Math.max(0,Math.min(1,t)))?"rgb(":"rgba(")+Math.max(0,Math.min(255,Math.round(this.r)||0))+", "+Math.max(0,Math.min(255,Math.round(this.g)||0))+", "+Math.max(0,Math.min(255,Math.round(this.b)||0))+(1===t?")":", "+t+")")}function L(t){return((t=Math.max(0,Math.min(255,Math.round(t)||0)))<16?"0":"")+t.toString(16)}function q(t,e,n,r){return r<=0?t=e=n=NaN:n<=0||n>=1?t=e=NaN:e<=0&&(t=NaN),new $(t,e,n,r)}function V(t){if(t instanceof $)return new $(t.h,t.s,t.l,t.opacity);if(t instanceof m||(t=A(t)),!t)return new $;if(t instanceof $)return t;var e=(t=t.rgb()).r/255,n=t.g/255,r=t.b/255,o=Math.min(e,n,r),i=Math.max(e,n,r),a=NaN,l=i-o,u=(i+o)/2;return l?(a=e===i?(n-r)/l+6*(n<r):n===i?(r-e)/l+2:(e-n)/l+4,l/=u<.5?i+o:2-i-o,a*=60):l=u>0&&u<1?0:a,new $(a,l,u,t.opacity)}function $(t,e,n,r){this.h=+t,this.s=+e,this.l=+n,this.opacity=+r}function W(t,e,n){return 255*(t<60?e+(n-e)*t/60:t<180?n:t<240?e+(n-e)*(240-t)/60:e)}function X(t,e,n,r,o){var i=t*t,a=i*t;return((1-3*t+3*i-a)*e+(4-6*i+3*a)*n+(1+3*t+3*i-3*a)*r+a*o)/6}p(m,A,{copy:function(t){return Object.assign(new this.constructor,this,t)},displayable:function(){return this.rgb().displayable()},hex:I,formatHex:I,formatHsl:function(){return V(this).formatHsl()},formatRgb:P,toString:P}),p(D,F,g(m,{brighter:function(t){return t=null==t?y:Math.pow(y,t),new D(this.r*t,this.g*t,this.b*t,this.opacity)},darker:function(t){return t=null==t?v:Math.pow(v,t),new D(this.r*t,this.g*t,this.b*t,this.opacity)},rgb:function(){return this},displayable:function(){return-.5<=this.r&&this.r<255.5&&-.5<=this.g&&this.g<255.5&&-.5<=this.b&&this.b<255.5&&0<=this.opacity&&this.opacity<=1},hex:j,formatHex:j,formatRgb:B,toString:B})),p($,(function(t,e,n,r){return 1===arguments.length?V(t):new $(t,e,n,null==r?1:r)}),g(m,{brighter:function(t){return t=null==t?y:Math.pow(y,t),new $(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=null==t?v:Math.pow(v,t),new $(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=this.h%360+360*(this.h<0),e=isNaN(t)||isNaN(this.s)?0:this.s,n=this.l,r=n+(n<.5?n:1-n)*e,o=2*n-r;return new D(W(t>=240?t-240:t+120,o,r),W(t,o,r),W(t<120?t+240:t-120,o,r),this.opacity)},displayable:function(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1},formatHsl:function(){var t=this.opacity;return(1===(t=isNaN(t)?1:Math.max(0,Math.min(1,t)))?"hsl(":"hsla(")+(this.h||0)+", "+100*(this.s||0)+"%, "+100*(this.l||0)+"%"+(1===t?")":", "+t+")")}}));const H=t=>()=>t;function Y(t,e){return function(n){return t+n*e}}function Z(t,e){var n=e-t;return n?Y(t,n):H(isNaN(t)?e:t)}const U=function t(e){var n=function(t){return 1==(t=+t)?Z:function(e,n){return n-e?function(t,e,n){return t=Math.pow(t,n),e=Math.pow(e,n)-t,n=1/n,function(r){return Math.pow(t+r*e,n)}}(e,n,t):H(isNaN(e)?n:e)}}(e);function r(t,e){var r=n((t=F(t)).r,(e=F(e)).r),o=n(t.g,e.g),i=n(t.b,e.b),a=Z(t.opacity,e.opacity);return function(e){return t.r=r(e),t.g=o(e),t.b=i(e),t.opacity=a(e),t+""}}return r.gamma=t,r}(1);function G(t){return function(e){var n,r,o=e.length,i=new Array(o),a=new Array(o),l=new Array(o);for(n=0;n<o;++n)r=F(e[n]),i[n]=r.r||0,a[n]=r.g||0,l[n]=r.b||0;return i=t(i),a=t(a),l=t(l),r.opacity=1,function(t){return r.r=i(t),r.g=a(t),r.b=l(t),r+""}}}var J=G((function(t){var e=t.length-1;return function(n){var r=n<=0?n=0:n>=1?(n=1,e-1):Math.floor(n*e),o=t[r],i=t[r+1],a=r>0?t[r-1]:2*o-i,l=r<e-1?t[r+2]:2*i-o;return X((n-r/e)*e,a,o,i,l)}}));function K(t,e){var n,r=e?e.length:0,o=t?Math.min(r,t.length):0,i=new Array(o),a=new Array(r);for(n=0;n<o;++n)i[n]=at(t[n],e[n]);for(;n<r;++n)a[n]=e[n];return function(t){for(n=0;n<o;++n)a[n]=i[n](t);return a}}function Q(t,e){var n=new Date;return t=+t,e=+e,function(r){return n.setTime(t*(1-r)+e*r),n}}function tt(t,e){return t=+t,e=+e,function(n){return t*(1-n)+e*n}}function et(t,e){var n,r={},o={};for(n in null!==t&&"object"==typeof t||(t={}),null!==e&&"object"==typeof e||(e={}),e)n in t?r[n]=at(t[n],e[n]):o[n]=e[n];return function(t){for(n in r)o[n]=r[n](t);return o}}G((function(t){var e=t.length;return function(n){var r=Math.floor(((n%=1)<0?++n:n)*e),o=t[(r+e-1)%e],i=t[r%e],a=t[(r+1)%e],l=t[(r+2)%e];return X((n-r/e)*e,o,i,a,l)}}));var nt=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,rt=new RegExp(nt.source,"g");function ot(t,e){var n,r,o,i=nt.lastIndex=rt.lastIndex=0,a=-1,l=[],u=[];for(t+="",e+="";(n=nt.exec(t))&&(r=rt.exec(e));)(o=r.index)>i&&(o=e.slice(i,o),l[a]?l[a]+=o:l[++a]=o),(n=n[0])===(r=r[0])?l[a]?l[a]+=r:l[++a]=r:(l[++a]=null,u.push({i:a,x:tt(n,r)})),i=rt.lastIndex;return i<e.length&&(o=e.slice(i),l[a]?l[a]+=o:l[++a]=o),l.length<2?u[0]?function(t){return function(e){return t(e)+""}}(u[0].x):function(t){return function(){return t}}(e):(e=u.length,function(t){for(var n,r=0;r<e;++r)l[(n=u[r]).i]=n.x(t);return l.join("")})}function it(t,e){e||(e=[]);var n,r=t?Math.min(e.length,t.length):0,o=e.slice();return function(i){for(n=0;n<r;++n)o[n]=t[n]*(1-i)+e[n]*i;return o}}function at(t,e){var n,r,o=typeof e;return null==e||"boolean"===o?H(e):("number"===o?tt:"string"===o?(n=A(e))?(e=n,U):ot:e instanceof A?U:e instanceof Date?Q:(r=e,!ArrayBuffer.isView(r)||r instanceof DataView?Array.isArray(e)?K:"function"!=typeof e.valueOf&&"function"!=typeof e.toString||isNaN(e)?et:tt:it))(t,e)}function lt(t,e){return t=+t,e=+e,function(n){return Math.round(t*(1-n)+e*n)}}function ut(t){return+t}var ct=[0,1];function st(t){return t}function ht(t,e){return(e-=t=+t)?function(n){return(n-t)/e}:(n=isNaN(e)?NaN:.5,function(){return n});var n}function ft(t,e,n){var r=t[0],o=t[1],i=e[0],a=e[1];return o<r?(r=ht(o,r),i=n(a,i)):(r=ht(r,o),i=n(i,a)),function(t){return i(r(t))}}function dt(t,e,n){var r=Math.min(t.length,e.length)-1,o=new Array(r),i=new Array(r),a=-1;for(t[r]<t[0]&&(t=t.slice().reverse(),e=e.slice().reverse());++a<r;)o[a]=ht(t[a],t[a+1]),i[a]=n(e[a],e[a+1]);return function(e){var n=d(t,e,1,r)-1;return i[n](o[n](e))}}function pt(t,e){return e.domain(t.domain()).range(t.range()).interpolate(t.interpolate()).clamp(t.clamp()).unknown(t.unknown())}function gt(){return function(){var t,e,n,r,o,i,a=ct,l=ct,u=at,c=st;function s(){var t,e,n,u=Math.min(a.length,l.length);return c!==st&&(t=a[0],e=a[u-1],t>e&&(n=t,t=e,e=n),c=function(n){return Math.max(t,Math.min(e,n))}),r=u>2?dt:ft,o=i=null,h}function h(e){return isNaN(e=+e)?n:(o||(o=r(a.map(t),l,u)))(t(c(e)))}return h.invert=function(n){return c(e((i||(i=r(l,a.map(t),tt)))(n)))},h.domain=function(t){return arguments.length?(a=Array.from(t,ut),s()):a.slice()},h.range=function(t){return arguments.length?(l=Array.from(t),s()):l.slice()},h.rangeRound=function(t){return l=Array.from(t),u=lt,s()},h.clamp=function(t){return arguments.length?(c=!!t||st,s()):c!==st},h.interpolate=function(t){return arguments.length?(u=t,s()):u},h.unknown=function(t){return arguments.length?(n=t,h):n},function(n,r){return t=n,e=r,s()}}()(st,st)}function mt(t,e){switch(arguments.length){case 0:break;case 1:this.range(t);break;default:this.range(e).domain(t)}return this}function vt(t,e){switch(arguments.length){case 0:break;case 1:"function"==typeof t?this.interpolator(t):this.range(t);break;default:this.domain(t),"function"==typeof e?this.interpolator(e):this.range(e)}return this}var yt,bt=/^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;function wt(t){if(!(e=bt.exec(t)))throw new Error("invalid format: "+t);var e;return new xt({fill:e[1],align:e[2],sign:e[3],symbol:e[4],zero:e[5],width:e[6],comma:e[7],precision:e[8]&&e[8].slice(1),trim:e[9],type:e[10]})}function xt(t){this.fill=void 0===t.fill?" ":t.fill+"",this.align=void 0===t.align?">":t.align+"",this.sign=void 0===t.sign?"-":t.sign+"",this.symbol=void 0===t.symbol?"":t.symbol+"",this.zero=!!t.zero,this.width=void 0===t.width?void 0:+t.width,this.comma=!!t.comma,this.precision=void 0===t.precision?void 0:+t.precision,this.trim=!!t.trim,this.type=void 0===t.type?"":t.type+""}function Nt(t,e){if((n=(t=e?t.toExponential(e-1):t.toExponential()).indexOf("e"))<0)return null;var n,r=t.slice(0,n);return[r.length>1?r[0]+r.slice(2):r,+t.slice(n+1)]}function Mt(t){return(t=Nt(Math.abs(t)))?t[1]:NaN}function kt(t,e){var n=Nt(t,e);if(!n)return t+"";var r=n[0],o=n[1];return o<0?"0."+new Array(-o).join("0")+r:r.length>o+1?r.slice(0,o+1)+"."+r.slice(o+1):r+new Array(o-r.length+2).join("0")}wt.prototype=xt.prototype,xt.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(void 0===this.width?"":Math.max(1,0|this.width))+(this.comma?",":"")+(void 0===this.precision?"":"."+Math.max(0,0|this.precision))+(this.trim?"~":"")+this.type};const Ct={"%":(t,e)=>(100*t).toFixed(e),b:t=>Math.round(t).toString(2),c:t=>t+"",d:function(t){return Math.abs(t=Math.round(t))>=1e21?t.toLocaleString("en").replace(/,/g,""):t.toString(10)},e:(t,e)=>t.toExponential(e),f:(t,e)=>t.toFixed(e),g:(t,e)=>t.toPrecision(e),o:t=>Math.round(t).toString(8),p:(t,e)=>kt(100*t,e),r:kt,s:function(t,e){var n=Nt(t,e);if(!n)return t+"";var r=n[0],o=n[1],i=o-(yt=3*Math.max(-8,Math.min(8,Math.floor(o/3))))+1,a=r.length;return i===a?r:i>a?r+new Array(i-a+1).join("0"):i>0?r.slice(0,i)+"."+r.slice(i):"0."+new Array(1-i).join("0")+Nt(t,Math.max(0,e+i-1))[0]},X:t=>Math.round(t).toString(16).toUpperCase(),x:t=>Math.round(t).toString(16)};function Et(t){return t}var St,Tt,Ot,It=Array.prototype.map,Pt=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"];function At(t){var e=t.domain;return t.ticks=function(t){var n=e();return function(t,e,n){var r,o,i,a,l=-1;if(n=+n,(t=+t)==(e=+e)&&n>0)return[t];if((r=e<t)&&(o=t,t=e,e=o),0===(a=u(t,e,n))||!isFinite(a))return[];if(a>0)for(t=Math.ceil(t/a),e=Math.floor(e/a),i=new Array(o=Math.ceil(e-t+1));++l<o;)i[l]=(t+l)*a;else for(a=-a,t=Math.ceil(t*a),e=Math.floor(e*a),i=new Array(o=Math.ceil(e-t+1));++l<o;)i[l]=(t+l)/a;return r&&i.reverse(),i}(n[0],n[n.length-1],null==t?10:t)},t.tickFormat=function(t,n){var r=e();return function(t,e,n,r){var o,u=function(t,e,n){var r=Math.abs(e-t)/Math.max(0,n),o=Math.pow(10,Math.floor(Math.log(r)/Math.LN10)),u=r/o;return u>=i?o*=10:u>=a?o*=5:u>=l&&(o*=2),e<t?-o:o}(t,e,n);switch((r=wt(null==r?",f":r)).type){case"s":var c=Math.max(Math.abs(t),Math.abs(e));return null!=r.precision||isNaN(o=function(t,e){return Math.max(0,3*Math.max(-8,Math.min(8,Math.floor(Mt(e)/3)))-Mt(Math.abs(t)))}(u,c))||(r.precision=o),Ot(r,c);case"":case"e":case"g":case"p":case"r":null!=r.precision||isNaN(o=function(t,e){return t=Math.abs(t),e=Math.abs(e)-t,Math.max(0,Mt(e)-Mt(t))+1}(u,Math.max(Math.abs(t),Math.abs(e))))||(r.precision=o-("e"===r.type));break;case"f":case"%":null!=r.precision||isNaN(o=function(t){return Math.max(0,-Mt(Math.abs(t)))}(u))||(r.precision=o-2*("%"===r.type))}return Tt(r)}(r[0],r[r.length-1],null==t?10:t,n)},t.nice=function(n){null==n&&(n=10);var r,o,i=e(),a=0,l=i.length-1,c=i[a],s=i[l],h=10;for(s<c&&(o=c,c=s,s=o,o=a,a=l,l=o);h-- >0;){if((o=u(c,s,n))===r)return i[a]=c,i[l]=s,e(i);if(o>0)c=Math.floor(c/o)*o,s=Math.ceil(s/o)*o;else{if(!(o<0))break;c=Math.ceil(c*o)/o,s=Math.floor(s*o)/o}r=o}return t},t}function Rt(){var t=gt();return t.copy=function(){return pt(t,Rt())},mt.apply(t,arguments),At(t)}function _t(){var t,e,n,r,o,i=0,a=1,l=st,u=!1;function c(e){return isNaN(e=+e)?o:l(0===n?.5:(e=(r(e)-t)*n,u?Math.max(0,Math.min(1,e)):e))}function s(t){return function(e){var n,r;return arguments.length?([n,r]=e,l=t(n,r),c):[l(0),l(1)]}}return c.domain=function(o){return arguments.length?([i,a]=o,t=r(i=+i),e=r(a=+a),n=t===e?0:1/(e-t),c):[i,a]},c.clamp=function(t){return arguments.length?(u=!!t,c):u},c.interpolator=function(t){return arguments.length?(l=t,c):l},c.range=s(at),c.rangeRound=s(lt),c.unknown=function(t){return arguments.length?(o=t,c):o},function(o){return r=o,t=o(i),e=o(a),n=t===e?0:1/(e-t),c}}function zt(t,e){return e.domain(t.domain()).interpolator(t.interpolator()).clamp(t.clamp()).unknown(t.unknown())}function Ft(){var t=At(_t()(st));return t.copy=function(){return zt(t,Ft())},vt.apply(t,arguments)}St=function(t){var e,n,r=void 0===t.grouping||void 0===t.thousands?Et:(e=It.call(t.grouping,Number),n=t.thousands+"",function(t,r){for(var o=t.length,i=[],a=0,l=e[0],u=0;o>0&&l>0&&(u+l+1>r&&(l=Math.max(1,r-u)),i.push(t.substring(o-=l,o+l)),!((u+=l+1)>r));)l=e[a=(a+1)%e.length];return i.reverse().join(n)}),o=void 0===t.currency?"":t.currency[0]+"",i=void 0===t.currency?"":t.currency[1]+"",a=void 0===t.decimal?".":t.decimal+"",l=void 0===t.numerals?Et:function(t){return function(e){return e.replace(/[0-9]/g,(function(e){return t[+e]}))}}(It.call(t.numerals,String)),u=void 0===t.percent?"%":t.percent+"",c=void 0===t.minus?"−":t.minus+"",s=void 0===t.nan?"NaN":t.nan+"";function h(t){var e=(t=wt(t)).fill,n=t.align,h=t.sign,f=t.symbol,d=t.zero,p=t.width,g=t.comma,m=t.precision,v=t.trim,y=t.type;"n"===y?(g=!0,y="g"):Ct[y]||(void 0===m&&(m=12),v=!0,y="g"),(d||"0"===e&&"="===n)&&(d=!0,e="0",n="=");var b="$"===f?o:"#"===f&&/[boxX]/.test(y)?"0"+y.toLowerCase():"",w="$"===f?i:/[%p]/.test(y)?u:"",x=Ct[y],N=/[defgprs%]/.test(y);function M(t){var o,i,u,f=b,M=w;if("c"===y)M=x(t)+M,t="";else{var k=(t=+t)<0||1/t<0;if(t=isNaN(t)?s:x(Math.abs(t),m),v&&(t=function(t){t:for(var e,n=t.length,r=1,o=-1;r<n;++r)switch(t[r]){case".":o=e=r;break;case"0":0===o&&(o=r),e=r;break;default:if(!+t[r])break t;o>0&&(o=0)}return o>0?t.slice(0,o)+t.slice(e+1):t}(t)),k&&0==+t&&"+"!==h&&(k=!1),f=(k?"("===h?h:c:"-"===h||"("===h?"":h)+f,M=("s"===y?Pt[8+yt/3]:"")+M+(k&&"("===h?")":""),N)for(o=-1,i=t.length;++o<i;)if(48>(u=t.charCodeAt(o))||u>57){M=(46===u?a+t.slice(o+1):t.slice(o))+M,t=t.slice(0,o);break}}g&&!d&&(t=r(t,1/0));var C=f.length+t.length+M.length,E=C<p?new Array(p-C+1).join(e):"";switch(g&&d&&(t=r(E+t,E.length?p-M.length:1/0),E=""),n){case"<":t=f+t+M+E;break;case"=":t=f+E+t+M;break;case"^":t=E.slice(0,C=E.length>>1)+f+t+M+E.slice(C);break;default:t=E+f+t+M}return l(t)}return m=void 0===m?6:/[gprs]/.test(y)?Math.max(1,Math.min(21,m)):Math.max(0,Math.min(20,m)),M.toString=function(){return t+""},M}return{format:h,formatPrefix:function(t,e){var n=h(((t=wt(t)).type="f",t)),r=3*Math.max(-8,Math.min(8,Math.floor(Mt(e)/3))),o=Math.pow(10,-r),i=Pt[8+r/3];return function(t){return n(o*t)+i}}}}({thousands:",",grouping:[3],currency:["$",""]}),Tt=St.format,Ot=St.formatPrefix;const Dt=(Xt=new Array(3).concat("fc8d59ffffbf99d594","d7191cfdae61abdda42b83ba","d7191cfdae61ffffbfabdda42b83ba","d53e4ffc8d59fee08be6f59899d5943288bd","d53e4ffc8d59fee08bffffbfe6f59899d5943288bd","d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd","d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd","9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2","9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2").map((function(t){for(var e=t.length/6|0,n=new Array(e),r=0;r<e;)n[r]="#"+t.slice(6*r,6*++r);return n})),J(Xt[Xt.length-1])),jt=Math.PI/180,Bt=180/Math.PI,Lt=.96422,qt=.82521,Vt=4/29,$t=6/29,Wt=3*$t*$t;var Xt;function Ht(t){if(t instanceof Yt)return new Yt(t.l,t.a,t.b,t.opacity);if(t instanceof te)return ee(t);t instanceof D||(t=z(t));var e,n,r=Jt(t.r),o=Jt(t.g),i=Jt(t.b),a=Zt((.2225045*r+.7168786*o+.0606169*i)/1);return r===o&&o===i?e=n=a:(e=Zt((.4360747*r+.3850649*o+.1430804*i)/Lt),n=Zt((.0139322*r+.0971045*o+.7141733*i)/qt)),new Yt(116*a-16,500*(e-a),200*(a-n),t.opacity)}function Yt(t,e,n,r){this.l=+t,this.a=+e,this.b=+n,this.opacity=+r}function Zt(t){return t>.008856451679035631?Math.pow(t,1/3):t/Wt+Vt}function Ut(t){return t>$t?t*t*t:Wt*(t-Vt)}function Gt(t){return 255*(t<=.0031308?12.92*t:1.055*Math.pow(t,1/2.4)-.055)}function Jt(t){return(t/=255)<=.04045?t/12.92:Math.pow((t+.055)/1.055,2.4)}function Kt(t){if(t instanceof te)return new te(t.h,t.c,t.l,t.opacity);if(t instanceof Yt||(t=Ht(t)),0===t.a&&0===t.b)return new te(NaN,0<t.l&&t.l<100?0:NaN,t.l,t.opacity);var e=Math.atan2(t.b,t.a)*Bt;return new te(e<0?e+360:e,Math.sqrt(t.a*t.a+t.b*t.b),t.l,t.opacity)}function Qt(t,e,n,r){return 1===arguments.length?Kt(t):new te(t,e,n,null==r?1:r)}function te(t,e,n,r){this.h=+t,this.c=+e,this.l=+n,this.opacity=+r}function ee(t){if(isNaN(t.h))return new Yt(t.l,0,0,t.opacity);var e=t.h*jt;return new Yt(t.l,Math.cos(e)*t.c,Math.sin(e)*t.c,t.opacity)}function ne(t){return function(e,n){var r=t((e=Qt(e)).h,(n=Qt(n)).h),o=Z(e.c,n.c),i=Z(e.l,n.l),a=Z(e.opacity,n.opacity);return function(t){return e.h=r(t),e.c=o(t),e.l=i(t),e.opacity=a(t),e+""}}}p(Yt,(function(t,e,n,r){return 1===arguments.length?Ht(t):new Yt(t,e,n,null==r?1:r)}),g(m,{brighter:function(t){return new Yt(this.l+18*(null==t?1:t),this.a,this.b,this.opacity)},darker:function(t){return new Yt(this.l-18*(null==t?1:t),this.a,this.b,this.opacity)},rgb:function(){var t=(this.l+16)/116,e=isNaN(this.a)?t:t+this.a/500,n=isNaN(this.b)?t:t-this.b/200;return new D(Gt(3.1338561*(e=Lt*Ut(e))-1.6168667*(t=1*Ut(t))-.4906146*(n=qt*Ut(n))),Gt(-.9787684*e+1.9161415*t+.033454*n),Gt(.0719453*e-.2289914*t+1.4052427*n),this.opacity)}})),p(te,Qt,g(m,{brighter:function(t){return new te(this.h,this.c,this.l+18*(null==t?1:t),this.opacity)},darker:function(t){return new te(this.h,this.c,this.l-18*(null==t?1:t),this.opacity)},rgb:function(){return ee(this).rgb()}}));const re=ne((function(t,e){var n=e-t;return n?Y(t,n>180||n<-180?n-360*Math.round(n/360):n):H(isNaN(t)?e:t)}));ne(Z);var oe={showTooltip:function(){throw new Error("TooltipContext not initalized")},hideTooltip:function(){throw new Error("TooltipContext not initalized")},disableTooltip:!1};const ie=t.createContext(oe),ae=function(){return t.useContext(ie)};var le,ue,ce=t.memo((function(e){var n=e.label,r=e.value,o=ae().tooltipClassName;return t.createElement("div",{className:o},t.createElement("div",{className:"TreeMap__tooltip"},void 0!==r?t.createElement(t.Fragment,null,t.createElement("span",{className:"TreeMap__tooltipLabel"},n,": "),t.createElement("span",{className:"TreeMap__tooltipValue"},""+r)):n))})),se=function(t,e){void 0===e&&(e={fontVariant:"normal",fontWeight:"normal",fontSize:14,fontFamily:"Arial"}),le||(le=document.createElement("canvas"));var n=le.getContext("2d"),r=e.fontVariant,o=e.fontWeight,i=e.fontSize,a=e.fontFamily,l=Number(i)+2;return n?(n.font=r+" "+o+" "+i+"px '"+a+"'",{width:Number(n.measureText(t).width),height:l}):{width:0,height:l}},he={},fe=function(t,e){return t/2*e+5};!function(t){t[t.TopRight=0]="TopRight",t[t.BottomRight=1]="BottomRight"}(ue||(ue={}));const de=function(e){var n=e.customId,r=e.width,o=e.height,i=e.textColor,a=e.nodeTotalNodes,l=e.isSelectedNode,u=e.placement,c=e.style,s=l?ue.TopRight:u,h=Number(c.fontSize),f=fe(h,a.toString().length),d=h+2,p=f+d;return r>f&&o>d?t.createElement("g",{transform:"translate(0, "+(s===ue.BottomRight?o-d:0)+")"},t.createElement("rect",{id:"rectNumberItems-"+n,x:r-f,y:0,width:f,height:d,fill:"none",stroke:i,strokeDasharray:(s===ue.BottomRight?f:0)+","+p+","+p}),t.createElement("text",{fill:i,x:r-f+f/2,y:d-2,textAnchor:"middle",style:{fontVariant:c.fontVariant,fontWeight:c.fontWeight,fontSize:c.fontSize,fontFamily:c.fontFamily}},a)):null},pe=function(e){var n=e.label,r=e.textColor,o=e.value,i=e.hasChildren,a=e.containerWidth,l=e.containerHeight,u=e.style,c=e.splitRegExp,s=void 0===c?/(?=[A-Z/a-z0-9.][^A-Z/a-z0-9. -])/g:c;if(!n)return null;var h=o?n+" "+o:n,f=se(h,u),d=f.width,p=f.height;if(l<p)return null;var g=Math.floor(l/p),m=d>=a||!i?n.split(s).concat(o).slice(0,g):[h];return t.createElement(t.Fragment,null,m.map((function(e,n){return t.createElement("tspan",{fontSize:u.fontSize,fill:r,key:n,x:0,dy:u.fontSize},function(t,e,n,r){void 0===r&&(r="...");var o=function(t){var n=he[t];if(void 0!==n)return n;var r=se(t,e).width;return he[t]=r,r},i=[],a=Array.from(t),l=o(r);if(n-l<0)return t.charAt(0);for(var u=l,c=!1,s=0;s<a.length;s++){var h=o(a[s]);if(!(u+h<=n)){i[s]=r,c=!0;break}i[s]=a[s],u+=h}return c?i.join(""):t}(e,u,a))})))};var ge=function(){return(ge=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var o in e=arguments[n])Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o]);return t}).apply(this,arguments)};const me=function(e){var r=e.bgColor,o=e.borderColor,i=e.className,a=e.hasChildren,l=e.hideNumberOfChildren,u=e.id,c=e.isSelectedNode,s=e.label,h=e.nodeTotalNodes,f=e.onClick,d=e.textColor,p=e.treemapId,g=e.url,m=e.value,v=e.x0,y=e.x1,b=e.xScaleFunction,w=e.y0,x=e.y1,N=e.yScaleFunction,M=e.style,k=e.numberOfChildrenPlacement,C=e.paddingInner,E=e.splitRegExp,S=Math.max(0,b(v)+C),T=Math.max(0,N(w)+C),O=Math.max(0,b(y)-b(v)-C),I=Math.max(0,N(x)-N(w)-C),P=!0===a&&!1===c?"pointer":"auto",A=Number(M.fontSize),R=fe(A,h.toString().length),_=!l&&a,z=O-(Number(M.paddingLeft)||0)-(Number(M.paddingRight)||4),F=Math.max(0,_&&k===ue.TopRight?z-R:z),D=ae(),j=D.hideTooltip,B=D.showTooltip,L=D.disableTooltip,q=t.useCallback((function(e){B(t.createElement(ce,{label:s,value:m}),e)}),[B]),V=t.useCallback((function(){j()}),[j]);return t.createElement("g",{onMouseEnter:L?void 0:q,onMouseLeave:L?void 0:V,onMouseMove:L?void 0:q,transform:"translate("+S+","+T+")",id:""+u,onClick:a?f:null,style:{cursor:P}},t.createElement("rect",{id:"rect-"+u,width:O,height:I,className:n()("Node",i),style:ge({fill:r,stroke:o},M)}),t.createElement("clipPath",{id:"clip-"+p+"-"+u},t.createElement("rect",{width:F,height:I})),t.createElement("a",{className:n()({Node__link:!!g}),href:g,target:"_blank"},t.createElement("text",{clipPath:"url(#clip-"+p+"-"+u+")",transform:"translate("+(M.paddingLeft||0)+","+(M.paddingTop||0)+")",style:{fontVariant:M.fontVariant,fontWeight:M.fontWeight,fontSize:M.fontSize,fontFamily:M.fontFamily}},t.createElement(pe,{label:s,textColor:d,value:m,hasChildren:a,containerWidth:F,containerHeight:I,style:M,splitRegExp:E}))),_&&t.createElement(de,{customId:u,width:O,height:I,style:M,textColor:d,nodeTotalNodes:h,isSelectedNode:c,placement:k}))};var ve,ye=function(e){var r=e.className,o=e.items;return o?t.createElement("div",{className:n()("TreeMap__breadcrumb",r)},o.map((function(e,n){return t.createElement("div",{key:n},t.createElement("a",{className:"TreeMap__breadcrumbItem",key:e.key,id:""+e.key,onClick:e.onClick?e.onClick:void 0,style:{cursor:e.onClick?"pointer":"auto"}},e.text),n<o.length-1?t.createElement("span",{className:"TreeMap__breadcrumbSeparator"},"/"):null)}))):null};!function(t){t[t.Depth=0]="Depth",t[t.Value=1]="Value",t[t.NumberOfChildren=2]="NumberOfChildren",t[t.OneEachChildren=3]="OneEachChildren"}(ve||(ve={}));var be=function(){},we="undefined"!=typeof window;const xe=we?t.useLayoutEffect:t.useEffect;var Ne={x:0,y:0,width:0,height:0,top:0,left:0,bottom:0,right:0};const Me=we&&void 0!==window.ResizeObserver?function(){var e=(0,t.useState)(null),n=e[0],r=e[1],o=(0,t.useState)(Ne),i=o[0],a=o[1],l=(0,t.useMemo)((function(){return new window.ResizeObserver((function(t){if(t[0]){var e=t[0].contentRect,n=e.x,r=e.y,o=e.width,i=e.height,l=e.top,u=e.left,c=e.bottom,s=e.right;a({x:n,y:r,width:o,height:i,top:l,left:u,bottom:c,right:s})}}))}),[]);return xe((function(){if(n)return l.observe(n),function(){l.disconnect()}}),[n]),[r,i]}:function(){return[be,Ne]},ke=t.memo((function(e){var n=e.position,r=e.placement,o=e.offsetX,i=void 0===o?0:o,a=e.offsetY,l=void 0===a?0:a,u=e.children,c=Me(),s=c[0],h=c[1],f=h.width,d=h.height,p=n[0],g=n[1],m=Math.round(p),v=Math.round(g),y=10;if(f>0&&d>0)switch(r){case"bottom":m-=f/2,v+=y;break;case"bottomLeft":m-=f+y,v+=d/2+y;break;case"bottomRight":m+=y,v+=d/2+y;break;case"left":m-=f+y,v-=d/2;break;case"right":m+=y,v-=d/2;break;case"top":m-=f/2,v-=d+y;break;case"topLeft":m-=f+y,v-=d+y;break;case"topRight":m+=y,v-=d+y}var b={pointerEvents:"none",position:"absolute",zIndex:10,top:0,left:0,maxWidth:"calc(50% - 15px)",transform:"translate("+(m+=i)+"px, "+(v+=l)+"px)"};return t.createElement("div",{ref:s,style:b},u)})),Ce=function(e){var n=e.tooltipPlacement,r=e.tooltipClassName,o=e.tooltipOffsetX,i=e.tooltipOffsetY,a=e.disableTooltip,l=e.children,u=t.useRef(null),c=t.useState(!1),s=c[0],h=c[1],f=t.useState([null,null]),d=f[0],p=f[1],g=t.useState(null),m=g[0],v=g[1],y=t.useState(n),b=y[0],w=y[1],x=t.useCallback((function(t,e){var n=e.clientX,r=e.clientY,o=u.current.getBoundingClientRect(),i=o.width,a=o.height,l=n-o.left,c=r-o.top;b||w(l<i/2?c<a/2?"bottomRight":"topRight":c<a/2?"bottomLeft":"topLeft"),h(!0),p([l,c]),v(t)}),[u,v,h,p]),N=t.useCallback((function(){h(!1)}),[h,p]),M=t.useMemo((function(){return{showTooltip:x,hideTooltip:N,tooltipClassName:r,disableTooltip:a}}),[x,N,r]);return t.createElement(ie.Provider,{value:M},t.createElement("div",{ref:u},l,s&&t.createElement(ke,{position:d,placement:b,offsetX:o,offsetY:i},m)))};function Ee(t,e){let n,r;if(void 0===e)for(const e of t)null!=e&&(void 0===n?e>=e&&(n=r=e):(n>e&&(n=e),r<e&&(r=e)));else{let o=-1;for(let i of t)null!=(i=e(i,++o,t))&&(void 0===n?i>=i&&(n=r=i):(n>i&&(n=i),r<i&&(r=i)))}return[n,r]}var Se=function(t){return t.parent&&t.parent.parent?Se(t.parent):t.customId},Te=function(t){return t.parent?Te(t.parent):t},Oe=function(t,e){var n=0;return t[e]&&t[e].forEach((function(t){var r=Oe(t,e);r>n&&(n=r)})),1+n},Ie=function(t){if(!t)return"dark";var e=F(t);return e?function(t,e,n){for(var r=[t/255,e/255,n/255],o=0;o<r.length;++o)r[o]<=.03928?r[o]=r[o]/12.92:r[o]=Math.pow((r[o]+.055)/1.055,2.4);return.2126*r[0]+.7152*r[1]+.0722*r[2]>.4?"light":"dark"}(e.r,e.g,e.b):void 0};function Pe(t){t.x0=Math.round(t.x0),t.y0=Math.round(t.y0),t.x1=Math.round(t.x1),t.y1=Math.round(t.y1)}function Ae(t,e,n,r,o){for(var i,a=t.children,l=-1,u=a.length,c=t.value&&(r-e)/t.value;++l<u;)(i=a[l]).y0=n,i.y1=o,i.x0=e,i.x1=e+=i.value*c}function Re(t,e,n,r,o){for(var i,a=t.children,l=-1,u=a.length,c=t.value&&(o-n)/t.value;++l<u;)(i=a[l]).x0=e,i.x1=r,i.y0=n,i.y1=n+=i.value*c}const _e=function t(e){function n(t,n,r,o,i){!function(t,e,n,r,o,i){for(var a,l,u,c,s,h,f,d,p,g,m,v=[],y=e.children,b=0,w=0,x=y.length,N=e.value;b<x;){u=o-n,c=i-r;do{s=y[w++].value}while(!s&&w<x);for(h=f=s,m=s*s*(g=Math.max(c/u,u/c)/(N*t)),p=Math.max(f/m,m/h);w<x;++w){if(s+=l=y[w].value,l<h&&(h=l),l>f&&(f=l),m=s*s*g,(d=Math.max(f/m,m/h))>p){s-=l;break}p=d}v.push(a={value:s,dice:u<c,children:y.slice(b,w)}),a.dice?Ae(a,n,r,o,N?r+=c*s/N:i):Re(a,n,r,N?n+=u*s/N:o,i),N-=s,b=w}}(e,t,n,r,o,i)}return n.ratio=function(e){return t((e=+e)>1?e:1)},n}((1+Math.sqrt(5))/2);function ze(t){if("function"!=typeof t)throw new Error;return t}function Fe(){return 0}function De(t){return function(){return t}}function je(t){var e=0,n=t.children,r=n&&n.length;if(r)for(;--r>=0;)e+=n[r].value;else e=1;t.value=e}function Be(t,e){t instanceof Map?(t=[void 0,t],void 0===e&&(e=qe)):void 0===e&&(e=Le);for(var n,r,o,i,a,l=new We(t),u=[l];n=u.pop();)if((o=e(n.data))&&(a=(o=Array.from(o)).length))for(n.children=o,i=a-1;i>=0;--i)u.push(r=o[i]=new We(o[i])),r.parent=n,r.depth=n.depth+1;return l.eachBefore($e)}function Le(t){return t.children}function qe(t){return Array.isArray(t)?t[1]:null}function Ve(t){void 0!==t.data.value&&(t.value=t.data.value),t.data=t.data.data}function $e(t){var e=0;do{t.height=e}while((t=t.parent)&&t.height<++e)}function We(t){this.data=t,this.depth=this.height=0,this.parent=null}We.prototype=Be.prototype={constructor:We,count:function(){return this.eachAfter(je)},each:function(t,e){let n=-1;for(const r of this)t.call(e,r,++n,this);return this},eachAfter:function(t,e){for(var n,r,o,i=this,a=[i],l=[],u=-1;i=a.pop();)if(l.push(i),n=i.children)for(r=0,o=n.length;r<o;++r)a.push(n[r]);for(;i=l.pop();)t.call(e,i,++u,this);return this},eachBefore:function(t,e){for(var n,r,o=this,i=[o],a=-1;o=i.pop();)if(t.call(e,o,++a,this),n=o.children)for(r=n.length-1;r>=0;--r)i.push(n[r]);return this},find:function(t,e){let n=-1;for(const r of this)if(t.call(e,r,++n,this))return r},sum:function(t){return this.eachAfter((function(e){for(var n=+t(e.data)||0,r=e.children,o=r&&r.length;--o>=0;)n+=r[o].value;e.value=n}))},sort:function(t){return this.eachBefore((function(e){e.children&&e.children.sort(t)}))},path:function(t){for(var e=this,n=function(t,e){if(t===e)return t;var n=t.ancestors(),r=e.ancestors(),o=null;for(t=n.pop(),e=r.pop();t===e;)o=t,t=n.pop(),e=r.pop();return o}(e,t),r=[e];e!==n;)e=e.parent,r.push(e);for(var o=r.length;t!==n;)r.splice(o,0,t),t=t.parent;return r},ancestors:function(){for(var t=this,e=[t];t=t.parent;)e.push(t);return e},descendants:function(){return Array.from(this)},leaves:function(){var t=[];return this.eachBefore((function(e){e.children||t.push(e)})),t},links:function(){var t=this,e=[];return t.each((function(n){n!==t&&e.push({source:n.parent,target:n})})),e},copy:function(){return Be(this).eachBefore(Ve)},[Symbol.iterator]:function*(){var t,e,n,r,o=this,i=[o];do{for(t=i.reverse(),i=[];o=t.pop();)if(yield o,e=o.children)for(n=0,r=e.length;n<r;++n)i.push(e[n])}while(i.length)}};var Xe,He=(Xe=function(t,e){return(Xe=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])})(t,e)},function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function n(){this.constructor=t}Xe(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),Ye=function(){return(Ye=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var o in e=arguments[n])Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o]);return t}).apply(this,arguments)};const Ze=function(e){function r(t){var n=e.call(this,t)||this;n._onBreadcrumbItemClicked=function(t){n._zoomTo(Number(t.currentTarget.id))},n._onNodeClick=function(t){n._zoomTo(parseInt(t.currentTarget.id))};var r=t.width,o=t.height,i=t.data,a=t.namePropInData,l=function(t){var e=t.width,n=t.height,r=t.data,o=t.valuePropInData,i=t.paddingOuter,a=function(){var t=_e,e=!1,n=1,r=1,o=[0],i=Fe,a=Fe,l=Fe,u=Fe,c=Fe;function s(t){return t.x0=t.y0=0,t.x1=n,t.y1=r,t.eachBefore(h),o=[0],e&&t.eachBefore(Pe),t}function h(e){var n=o[e.depth],r=e.x0+n,s=e.y0+n,h=e.x1-n,f=e.y1-n;h<r&&(r=h=(r+h)/2),f<s&&(s=f=(s+f)/2),e.x0=r,e.y0=s,e.x1=h,e.y1=f,e.children&&(n=o[e.depth+1]=i(e)/2,r+=c(e)-n,s+=a(e)-n,(h-=l(e)-n)<r&&(r=h=(r+h)/2),(f-=u(e)-n)<s&&(s=f=(s+f)/2),t(e,r,s,h,f))}return s.round=function(t){return arguments.length?(e=!!t,s):e},s.size=function(t){return arguments.length?(n=+t[0],r=+t[1],s):[n,r]},s.tile=function(e){return arguments.length?(t=ze(e),s):t},s.padding=function(t){return arguments.length?s.paddingInner(t).paddingOuter(t):s.paddingInner()},s.paddingInner=function(t){return arguments.length?(i="function"==typeof t?t:De(+t),s):i},s.paddingOuter=function(t){return arguments.length?s.paddingTop(t).paddingRight(t).paddingBottom(t).paddingLeft(t):s.paddingTop()},s.paddingTop=function(t){return arguments.length?(a="function"==typeof t?t:De(+t),s):a},s.paddingRight=function(t){return arguments.length?(l="function"==typeof t?t:De(+t),s):l},s.paddingBottom=function(t){return arguments.length?(u="function"==typeof t?t:De(+t),s):u},s.paddingLeft=function(t){return arguments.length?(c="function"==typeof t?t:De(+t),s):c},s}().tile(_e.ratio(1)).size([e,n]).round(!0).paddingOuter((function(t){return t.depth>2?1:t.depth>1?2:i})).paddingTop((function(t){return t.depth>2?3:t.depth>1?7:19}))(Be(r).sum((function(t){return t[o]})).sort((function(t,e){return e[o]-t[o]}))),l=0;return a.each((function(t){t.customId=l++}))}({width:r,height:o,data:i,valuePropInData:t.valuePropInData,paddingOuter:t.paddingOuter});return n.state={height:o,width:r,xScaleFunction:Rt().range([0,r]).domain([l.x0,l.x1]),yScaleFunction:Rt().range([0,o]).domain([l.y0,l.y1]),breadcrumbItems:[{text:i[a],key:0}],selectedNode:l},n}return He(r,e),r.prototype.componentDidMount=function(){var t=this.props.onTreeMapDidMount;this._zoomTo(0),t&&t(this)},r.prototype.UNSAFE_componentWillReceiveProps=function(t){var e=t.width,n=t.height;if(n!==this.props.height||e!==this.props.width){var r=this.state.selectedNode;this.setState({width:e,height:n,xScaleFunction:Rt().range([0,e]).domain([r.x0,r.x1]),yScaleFunction:Rt().range([0,n]).domain([r.y0,r.y1])})}},r.prototype.render=function(){var e=this,r=this.state,o=r.width,i=r.height,a=r.breadcrumbItems,l=r.selectedNode,u=this.props,c=u.svgClassName,s=u.svgStyle,h=u.className,f=u.childrenPropInData,d=u.breadCrumbClassName,p=u.disableBreadcrumb,g=u.tooltipPlacement,m=u.tooltipClassName,v=u.disableTooltip,y=u.tooltipOffsetX,b=u.tooltipOffsetY,w=u.levelsToDisplay,x=[],N=0===l.depth?w:1,M=function(t,n){x=x.concat(e._getNode(t)),n<N&&f in t&&t[f].length>0&&t[f].forEach((function(t){M(t,n+1)}))};return M(l,0),t.createElement(Ce,{tooltipPlacement:g,tooltipClassName:m,disableTooltip:v,tooltipOffsetX:y,tooltipOffsetY:b},t.createElement("div",{className:h},!1===p?t.createElement(ye,{items:a,className:d}):null,t.createElement("svg",{className:n()(c),height:i,width:o,style:Ye({},s)},x)))},r.prototype._getNode=function(e){var r=this.props,o=r.id,i=r.valueUnit,a=r.hideValue,l=r.hideNumberOfChildren,u=r.nodeStyle,c=r.nodeClassName,s=r.valuePropInData,h=r.childrenPropInData,f=r.namePropInData,d=r.linkPropInData,p=r.numberOfChildrenPlacement,g=r.darkNodeTextColor,m=r.darkNodeBorderColor,v=r.lightNodeTextColor,y=r.lightNodeBorderColor,b=r.paddingInner,w=r.valueFn,x=r.valueFormat,N=r.splitRegExp,M=this.state,k=M.xScaleFunction,C=M.yScaleFunction,E=M.selectedNode,S=e.customId,T=e.data,O=e.x0,I=e.x1,P=e.y0,A=e.y1,R=T[f],_=T[d],z=T.className,F=!!(e[h]&&e[h].length>0),D=e[s];try{D=function(t,e){var n=function(t){return""+t};try{n=t||Tt(e)}catch(t){console.warn(t)}return n}(w,x)(e[s])}catch(t){console.warn(t)}var j="("+D+(i?" "+i:"")+")",B=e.descendants().length-1,L=this._getColorsFromNode(e,B,{darkNodeTextColor:g,darkNodeBorderColor:m,lightNodeTextColor:v,lightNodeBorderColor:y}),q=L.bgColor,V=L.textColor,$=L.borderColor,W=S===E.customId;return t.createElement(me,{bgColor:q,textColor:V,borderColor:$,className:n()(c,z),style:Ye({fontVariant:"normal",fontWeight:"normal",fontSize:14,fontFamily:"Arial"},u),hasChildren:F,hideNumberOfChildren:l,id:S,isSelectedNode:W,key:S,label:R,nodeTotalNodes:B,onClick:W?void 0:this._onNodeClick,treemapId:o,url:_,value:!a&&j,x0:O,x1:I,xScaleFunction:k,y0:P,y1:A,yScaleFunction:C,numberOfChildrenPlacement:p,paddingInner:b,splitRegExp:N})},r.prototype._getColorsFromNode=function(t,e,n){var r,o=n.darkNodeTextColor,i=n.darkNodeBorderColor,a=n.lightNodeTextColor,l=n.lightNodeBorderColor,u=this.props,c=u.colorModel,s=u.valuePropInData,h=u.customD3ColorScale,f=u.data,d=u.childrenPropInData,p=function(t,e,n,r,o,i){var a,l=t.descendants();switch(n){case ve.Depth:a=[0,Oe(e,r)-1];break;case ve.Value:a=Ee(l,(function(t){if(null!==t.parent)return t[o]}));break;case ve.NumberOfChildren:a=Ee(l,(function(t){return null!==t.parent?t.descendants().length:1}));break;case ve.OneEachChildren:a=[e[r]?e[r].length:0,0]}return i.domain(a)}(Te(t),f,c,d,s,h);switch(c){case ve.Depth:r=p(t.depth),null===t.parent&&(r=p(0));break;case ve.Value:r=p(t[s]),null===t.parent&&(r=p(1));break;case ve.NumberOfChildren:r=p(e),null===t.parent&&(r=p(1));break;case ve.OneEachChildren:var g=p(Se(t));r=t.depth>1?Rt().domain([0,t&&t.children?t.children.length:0]).interpolate(re).range(["white",g])(Se(t)):g,null===t.parent&&(r=p(0))}return{bgColor:r,textColor:"dark"===Ie(r)?o:a,borderColor:"dark"===Ie(r)?i:l}},r.prototype._zoomTo=function(t){var e=this,n=this.state,r=n.xScaleFunction,o=n.yScaleFunction,i=n.selectedNode,a=this.props.onZoom,l=Te(i).descendants().filter((function(e){return e.customId.toString()===t.toString()})).pop();if(l){var u=Te(l).path(l).map((function(n){var r=n.data,o=n.customId;return{text:r.name,key:o,onClick:o!==t?e._onBreadcrumbItemClicked:void 0}}));a&&a(l.depth,t,u),this.setState({xScaleFunction:r.domain([l.x0,l.x1]),yScaleFunction:o.domain([l.y0,l.y1]),selectedNode:l,breadcrumbItems:u})}else console.warn("No node found for "+t)},r.prototype.resetZoom=function(){this._zoomTo(0)},r.prototype.zoomOut=function(){var t=this.state.selectedNode;t&&t.parent&&void 0!==t.parent.customId&&this._zoomTo(t.parent.customId)},r.prototype.getZoomLevel=function(){return this.state.selectedNode.depth},r.defaultProps={id:"myTreeMap",data:null,height:600,width:600,valueFormat:",d",disableBreadcrumb:!1,colorModel:ve.OneEachChildren,paddingInner:4,paddingOuter:4,customD3ColorScale:Ft(Dt),namePropInData:"name",linkPropInData:"link",valuePropInData:"value",childrenPropInData:"children",numberOfChildrenPlacement:ue.BottomRight,darkNodeTextColor:"white",darkNodeBorderColor:"white",lightNodeTextColor:"black",lightNodeBorderColor:"black",disableTooltip:!1,tooltipOffsetX:0,tooltipOffsetY:0,levelsToDisplay:1},r}(t.Component)})(),o})()}));
//# sourceMappingURL=react.d3.treemap.js.map

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,